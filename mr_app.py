{"cells":[{"cell_type":"markdown","metadata":{"id":"DlmVMivpcYh5"},"source":["# **Movie Recommender**"]},{"cell_type":"markdown","metadata":{"id":"KhjfKRyqcnj7"},"source":["# Setup"]},{"cell_type":"markdown","metadata":{"id":"2zfhX49tcrpK"},"source":["## Installing packages"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"elapsed":34570,"status":"ok","timestamp":1730457598265,"user":{"displayName":"Jamie Hill","userId":"10831983047187267053"},"user_tz":0},"id":"MeNcn9x8FqqY"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting IMDbPY\n","  Downloading IMDbPY-2022.7.9-py3-none-any.whl.metadata (498 bytes)\n","Collecting cinemagoer (from IMDbPY)\n","  Downloading cinemagoer-2023.5.1-py3-none-any.whl.metadata (2.9 kB)\n","Requirement already satisfied: SQLAlchemy in /usr/local/lib/python3.10/dist-packages (from cinemagoer-\u003eIMDbPY) (2.0.36)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from cinemagoer-\u003eIMDbPY) (5.3.0)\n","Requirement already satisfied: typing-extensions\u003e=4.6.0 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy-\u003ecinemagoer-\u003eIMDbPY) (4.12.2)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy-\u003ecinemagoer-\u003eIMDbPY) (3.1.1)\n","Downloading IMDbPY-2022.7.9-py3-none-any.whl (1.2 kB)\n","Downloading cinemagoer-2023.5.1-py3-none-any.whl (297 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m297.2/297.2 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: cinemagoer, IMDbPY\n","Successfully installed IMDbPY-2022.7.9 cinemagoer-2023.5.1\n","Collecting en-core-web-md==3.7.1\n","  Downloading https://github.com/explosion/spacy-models/releases/download/en_core_web_md-3.7.1/en_core_web_md-3.7.1-py3-none-any.whl (42.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m42.8/42.8 MB\u001b[0m \u001b[31m13.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: spacy\u003c3.8.0,\u003e=3.7.2 in /usr/local/lib/python3.10/dist-packages (from en-core-web-md==3.7.1) (3.7.5)\n","Requirement already satisfied: spacy-legacy\u003c3.1.0,\u003e=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (3.0.12)\n","Requirement already satisfied: spacy-loggers\u003c2.0.0,\u003e=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (1.0.5)\n","Requirement already satisfied: murmurhash\u003c1.1.0,\u003e=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (1.0.10)\n","Requirement already satisfied: cymem\u003c2.1.0,\u003e=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2.0.8)\n","Requirement already satisfied: preshed\u003c3.1.0,\u003e=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (3.0.9)\n","Requirement already satisfied: thinc\u003c8.3.0,\u003e=8.2.2 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (8.2.5)\n","Requirement already satisfied: wasabi\u003c1.2.0,\u003e=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (1.1.3)\n","Requirement already satisfied: srsly\u003c3.0.0,\u003e=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2.4.8)\n","Requirement already satisfied: catalogue\u003c2.1.0,\u003e=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2.0.10)\n","Requirement already satisfied: weasel\u003c0.5.0,\u003e=0.1.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (0.4.1)\n","Requirement already satisfied: typer\u003c1.0.0,\u003e=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (0.12.5)\n","Requirement already satisfied: tqdm\u003c5.0.0,\u003e=4.38.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (4.66.6)\n","Requirement already satisfied: requests\u003c3.0.0,\u003e=2.13.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2.32.3)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,\u003c3.0.0,\u003e=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2.9.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (3.1.4)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (75.1.0)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (24.1)\n","Requirement already satisfied: langcodes\u003c4.0.0,\u003e=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (3.4.1)\n","Requirement already satisfied: numpy\u003e=1.19.0 in /usr/local/lib/python3.10/dist-packages (from spacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (1.26.4)\n","Requirement already satisfied: language-data\u003e=1.2 in /usr/local/lib/python3.10/dist-packages (from langcodes\u003c4.0.0,\u003e=3.2.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (1.2.0)\n","Requirement already satisfied: annotated-types\u003e=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,\u003c3.0.0,\u003e=1.7.4-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.23.4 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,\u003c3.0.0,\u003e=1.7.4-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2.23.4)\n","Requirement already satisfied: typing-extensions\u003e=4.6.1 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,\u003c3.0.0,\u003e=1.7.4-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (4.12.2)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests\u003c3.0.0,\u003e=2.13.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (3.4.0)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests\u003c3.0.0,\u003e=2.13.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (3.10)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests\u003c3.0.0,\u003e=2.13.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2.2.3)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests\u003c3.0.0,\u003e=2.13.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2024.8.30)\n","Requirement already satisfied: blis\u003c0.8.0,\u003e=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc\u003c8.3.0,\u003e=8.2.2-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (0.7.11)\n","Requirement already satisfied: confection\u003c1.0.0,\u003e=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc\u003c8.3.0,\u003e=8.2.2-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (0.1.5)\n","Requirement already satisfied: click\u003e=8.0.0 in /usr/local/lib/python3.10/dist-packages (from typer\u003c1.0.0,\u003e=0.3.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (8.1.7)\n","Requirement already satisfied: shellingham\u003e=1.3.0 in /usr/local/lib/python3.10/dist-packages (from typer\u003c1.0.0,\u003e=0.3.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (1.5.4)\n","Requirement already satisfied: rich\u003e=10.11.0 in /usr/local/lib/python3.10/dist-packages (from typer\u003c1.0.0,\u003e=0.3.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (13.9.3)\n","Requirement already satisfied: cloudpathlib\u003c1.0.0,\u003e=0.7.0 in /usr/local/lib/python3.10/dist-packages (from weasel\u003c0.5.0,\u003e=0.1.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (0.20.0)\n","Requirement already satisfied: smart-open\u003c8.0.0,\u003e=5.2.1 in /usr/local/lib/python3.10/dist-packages (from weasel\u003c0.5.0,\u003e=0.1.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (7.0.5)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (3.0.2)\n","Requirement already satisfied: marisa-trie\u003e=0.7.7 in /usr/local/lib/python3.10/dist-packages (from language-data\u003e=1.2-\u003elangcodes\u003c4.0.0,\u003e=3.2.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (1.2.1)\n","Requirement already satisfied: markdown-it-py\u003e=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich\u003e=10.11.0-\u003etyper\u003c1.0.0,\u003e=0.3.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (3.0.0)\n","Requirement already satisfied: pygments\u003c3.0.0,\u003e=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich\u003e=10.11.0-\u003etyper\u003c1.0.0,\u003e=0.3.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (2.18.0)\n","Requirement already satisfied: wrapt in /usr/local/lib/python3.10/dist-packages (from smart-open\u003c8.0.0,\u003e=5.2.1-\u003eweasel\u003c0.5.0,\u003e=0.1.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (1.16.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py\u003e=2.2.0-\u003erich\u003e=10.11.0-\u003etyper\u003c1.0.0,\u003e=0.3.0-\u003espacy\u003c3.8.0,\u003e=3.7.2-\u003een-core-web-md==3.7.1) (0.1.2)\n","Installing collected packages: en-core-web-md\n","Successfully installed en-core-web-md-3.7.1\n","\u001b[38;5;2m✔ Download and installation successful\u001b[0m\n","You can now load the package via spacy.load('en_core_web_md')\n","\u001b[38;5;3m⚠ Restart to reload dependencies\u001b[0m\n","If you are in a Jupyter or Colab notebook, you may need to restart Python in\n","order to load all the package's dependencies. You can do this by selecting the\n","'Restart kernel' or 'Restart runtime' option.\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (2.32.3)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests) (3.4.0)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests) (3.10)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests) (2.2.3)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests) (2024.8.30)\n","Requirement already satisfied: flask in /usr/local/lib/python3.10/dist-packages (2.2.5)\n","Requirement already satisfied: Werkzeug\u003e=2.2.2 in /usr/local/lib/python3.10/dist-packages (from flask) (3.0.6)\n","Requirement already satisfied: Jinja2\u003e=3.0 in /usr/local/lib/python3.10/dist-packages (from flask) (3.1.4)\n","Requirement already satisfied: itsdangerous\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from flask) (2.2.0)\n","Requirement already satisfied: click\u003e=8.0 in /usr/local/lib/python3.10/dist-packages (from flask) (8.1.7)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from Jinja2\u003e=3.0-\u003eflask) (3.0.2)\n","Requirement already satisfied: Flask in /usr/local/lib/python3.10/dist-packages (2.2.5)\n","Collecting flask-ngrok\n","  Downloading flask_ngrok-0.0.25-py3-none-any.whl.metadata (1.8 kB)\n","Requirement already satisfied: Werkzeug\u003e=2.2.2 in /usr/local/lib/python3.10/dist-packages (from Flask) (3.0.6)\n","Requirement already satisfied: Jinja2\u003e=3.0 in /usr/local/lib/python3.10/dist-packages (from Flask) (3.1.4)\n","Requirement already satisfied: itsdangerous\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask) (2.2.0)\n","Requirement already satisfied: click\u003e=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask) (8.1.7)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from flask-ngrok) (2.32.3)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from Jinja2\u003e=3.0-\u003eFlask) (3.0.2)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003eflask-ngrok) (3.4.0)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003eflask-ngrok) (3.10)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003eflask-ngrok) (2.2.3)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003eflask-ngrok) (2024.8.30)\n","Downloading flask_ngrok-0.0.25-py3-none-any.whl (3.1 kB)\n","Installing collected packages: flask-ngrok\n","Successfully installed flask-ngrok-0.0.25\n","Requirement already satisfied: flask_ngrok in /usr/local/lib/python3.10/dist-packages (0.0.25)\n","Requirement already satisfied: Flask\u003e=0.8 in /usr/local/lib/python3.10/dist-packages (from flask_ngrok) (2.2.5)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from flask_ngrok) (2.32.3)\n","Requirement already satisfied: Werkzeug\u003e=2.2.2 in /usr/local/lib/python3.10/dist-packages (from Flask\u003e=0.8-\u003eflask_ngrok) (3.0.6)\n","Requirement already satisfied: Jinja2\u003e=3.0 in /usr/local/lib/python3.10/dist-packages (from Flask\u003e=0.8-\u003eflask_ngrok) (3.1.4)\n","Requirement already satisfied: itsdangerous\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask\u003e=0.8-\u003eflask_ngrok) (2.2.0)\n","Requirement already satisfied: click\u003e=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask\u003e=0.8-\u003eflask_ngrok) (8.1.7)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003eflask_ngrok) (3.4.0)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003eflask_ngrok) (3.10)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003eflask_ngrok) (2.2.3)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003eflask_ngrok) (2024.8.30)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from Jinja2\u003e=3.0-\u003eFlask\u003e=0.8-\u003eflask_ngrok) (3.0.2)\n","Collecting pyngrok\n","  Downloading pyngrok-7.2.0-py3-none-any.whl.metadata (7.4 kB)\n","Requirement already satisfied: PyYAML\u003e=5.1 in /usr/local/lib/python3.10/dist-packages (from pyngrok) (6.0.2)\n","Downloading pyngrok-7.2.0-py3-none-any.whl (22 kB)\n","Installing collected packages: pyngrok\n","Successfully installed pyngrok-7.2.0\n","Collecting Flask-WTF\n","  Downloading flask_wtf-1.2.2-py3-none-any.whl.metadata (3.4 kB)\n","Requirement already satisfied: flask in /usr/local/lib/python3.10/dist-packages (from Flask-WTF) (2.2.5)\n","Requirement already satisfied: itsdangerous in /usr/local/lib/python3.10/dist-packages (from Flask-WTF) (2.2.0)\n","Collecting wtforms (from Flask-WTF)\n","  Downloading wtforms-3.2.1-py3-none-any.whl.metadata (5.3 kB)\n","Requirement already satisfied: Werkzeug\u003e=2.2.2 in /usr/local/lib/python3.10/dist-packages (from flask-\u003eFlask-WTF) (3.0.6)\n","Requirement already satisfied: Jinja2\u003e=3.0 in /usr/local/lib/python3.10/dist-packages (from flask-\u003eFlask-WTF) (3.1.4)\n","Requirement already satisfied: click\u003e=8.0 in /usr/local/lib/python3.10/dist-packages (from flask-\u003eFlask-WTF) (8.1.7)\n","Requirement already satisfied: markupsafe in /usr/local/lib/python3.10/dist-packages (from wtforms-\u003eFlask-WTF) (3.0.2)\n","Downloading flask_wtf-1.2.2-py3-none-any.whl (12 kB)\n","Downloading wtforms-3.2.1-py3-none-any.whl (152 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m152.5/152.5 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: wtforms, Flask-WTF\n","Successfully installed Flask-WTF-1.2.2 wtforms-3.2.1\n"]}],"source":["# Install IMDbPY if not already installed\n","# Install spaCy and download the English model if not already installed\n","\n","!pip install IMDbPY\n","!python -m spacy download en_core_web_md\n","!pip install requests\n","!pip install flask\n","!pip install Flask flask-ngrok\n","!pip install flask_ngrok\n","!pip install pyngrok\n","!pip install Flask-WTF"]},{"cell_type":"markdown","metadata":{"id":"iZBK-UwdUHV9"},"source":["# Models"]},{"cell_type":"markdown","metadata":{"id":"cy-B4fl5dNvR"},"source":["## Utilising Flask and Ngrok"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":34878,"status":"ok","timestamp":1730457811643,"user":{"displayName":"Jamie Hill","userId":"10831983047187267053"},"user_tz":0},"id":"Zp5XWeuyag0H","outputId":"072489f5-3826-4701-9efb-163da35430e8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Ngrok tunnel URL: NgrokTunnel: \"https://c81a-34-145-192-21.ngrok-free.app\" -\u003e \"http://localhost:5000\"\n"," * Serving Flask app '__main__'\n"," * Debug mode: off\n"]},{"name":"stderr","output_type":"stream","text":["INFO:werkzeug:\u001b[31m\u001b[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\u001b[0m\n"," * Running on http://127.0.0.1:5000\n","INFO:werkzeug:\u001b[33mPress CTRL+C to quit\u001b[0m\n"]},{"name":"stdout","output_type":"stream","text":[" * Running on http://c81a-34-145-192-21.ngrok-free.app\n"," * Traffic stats available on http://127.0.0.1:4040\n"]},{"name":"stderr","output_type":"stream","text":["INFO:werkzeug:127.0.0.1 - - [01/Nov/2024 10:43:02] \"GET / HTTP/1.1\" 200 -\n","INFO:werkzeug:127.0.0.1 - - [01/Nov/2024 10:43:02] \"\u001b[33mGET /favicon.ico HTTP/1.1\u001b[0m\" 404 -\n"]},{"name":"stdout","output_type":"stream","text":["User mood 'happy' compared to 'happy': similarity = 1.0\n","User mood 'happy' compared to 'thrilled': similarity = 0.6118767323099579\n","User mood 'happy' compared to 'thoughtful': similarity = 0.5509729160195502\n","User mood 'happy' compared to 'adventurous': similarity = 0.4242331475102346\n","User mood 'happy' compared to 'sad': similarity = 0.5034751138271376\n","User mood 'happy' compared to 'melancholy': similarity = 0.30610852322321097\n","User mood 'happy' compared to 'excited': similarity = 0.6950213519875488\n","User mood 'happy' compared to 'calm': similarity = 0.4127508637377522\n","User mood 'happy' compared to 'scared': similarity = 0.47210213122332473\n","User mood 'happy' compared to 'romantic': similarity = 0.3658038201303511\n","User mood 'happy' compared to 'dramatic': similarity = 0.16248634110432436\n","User mood 'happy' compared to 'funny': similarity = 0.46676024416126605\n","User mood 'happy' compared to 'inspired': similarity = 0.28725587205261727\n","Closest mood found: happy with similarity 1.0\n"]},{"name":"stderr","output_type":"stream","text":["INFO:werkzeug:127.0.0.1 - - [01/Nov/2024 10:43:08] \"POST /recommend HTTP/1.1\" 200 -\n"]},{"name":"stdout","output_type":"stream","text":["User mood 'happy' compared to 'happy': similarity = 1.0\n","User mood 'happy' compared to 'thrilled': similarity = 0.6118767323099579\n","User mood 'happy' compared to 'thoughtful': similarity = 0.5509729160195502\n","User mood 'happy' compared to 'adventurous': similarity = 0.4242331475102346\n","User mood 'happy' compared to 'sad': similarity = 0.5034751138271376\n","User mood 'happy' compared to 'melancholy': similarity = 0.30610852322321097\n","User mood 'happy' compared to 'excited': similarity = 0.6950213519875488\n","User mood 'happy' compared to 'calm': similarity = 0.4127508637377522\n","User mood 'happy' compared to 'scared': similarity = 0.47210213122332473\n","User mood 'happy' compared to 'romantic': similarity = 0.3658038201303511\n","User mood 'happy' compared to 'dramatic': similarity = 0.16248634110432436\n","User mood 'happy' compared to 'funny': similarity = 0.46676024416126605\n","User mood 'happy' compared to 'inspired': similarity = 0.28725587205261727\n","Closest mood found: happy with similarity 1.0\n"]},{"name":"stderr","output_type":"stream","text":["INFO:werkzeug:127.0.0.1 - - [01/Nov/2024 10:43:23] \"POST /recommend HTTP/1.1\" 200 -\n","INFO:werkzeug:127.0.0.1 - - [01/Nov/2024 10:43:25] \"GET / HTTP/1.1\" 200 -\n"]}],"source":["from flask import Flask, request, render_template\n","from flask_ngrok import run_with_ngrok\n","import requests\n","import random\n","import spacy\n","from datetime import datetime\n","from pyngrok import ngrok\n","import os\n","\n","# Load spaCy model\n","nlp = spacy.load(\"en_core_web_md\")\n","\n","# Initialize Flask app\n","app = Flask(__name__, template_folder='/content/drive/MyDrive/colabnotebooks/pythonanywhere/pr_movie_recommender/templates')  # Adjust the path as necessary\n","ngrok.set_auth_token(os.getenv(\"NGROK_AUTH_TOKEN\", \"2o4pfmzyiwmBZcY4vhwQiYsOiJS_FsuQB2nueaQ863GcU2ya\"))\n","run_with_ngrok(app)  # Integrate ngrok\n","public_url = ngrok.connect(5000)\n","print(\"Ngrok tunnel URL:\", public_url)\n","\n","# TMDb API Key and Base URL\n","API_KEY = '067fd28c11279efc124bd66dcee5a58d'\n","BASE_URL = 'https://api.themoviedb.org/3'\n","\n","# Expanded mood-to-genre mapping with more options\n","mood_genre_mapping = {\n","    'happy': 35,\n","    'thrilled': 53,\n","    'thoughtful': 18,\n","    'adventurous': 12,\n","    'sad': 18,\n","    'melancholy': 18,\n","    'excited': 28,\n","    'calm': 10751,\n","    'scared': 27,\n","    'romantic': 10749,\n","    'dramatic': 18,\n","    'funny': 35,\n","    'inspired': 18\n","}\n","\n","# Improved function to find the closest mood\n","def find_closest_mood(user_mood):\n","    user_mood_doc = nlp(user_mood)\n","    closest_mood = None\n","    highest_similarity = -1\n","\n","    for mood in mood_genre_mapping.keys():\n","        mood_doc = nlp(mood)\n","        similarity = user_mood_doc.similarity(mood_doc)\n","        print(f\"User mood '{user_mood}' compared to '{mood}': similarity = {similarity}\")\n","\n","        if similarity \u003e highest_similarity:\n","            closest_mood = mood\n","            highest_similarity = similarity\n","\n","    if highest_similarity \u003c 0.5:\n","        print(f\"Low similarity ({highest_similarity}) for mood '{user_mood}'; defaulting to 'thoughtful'\")\n","        closest_mood = 'thoughtful'\n","\n","    print(f\"Closest mood found: {closest_mood} with similarity {highest_similarity}\")\n","    return closest_mood\n","\n","# Helper function to get detailed movie info, including trailer, cast, runtime, and streaming services\n","def get_movie_details(movie_id, country_code='US'):\n","    url = f\"{BASE_URL}/movie/{movie_id}\"\n","    params = {'api_key': API_KEY, 'append_to_response': 'videos,credits,watch/providers'}\n","    response = requests.get(url, params=params)\n","    if response.status_code == 200:\n","        data = response.json()\n","\n","        trailer_url = None\n","        for video in data['videos']['results']:\n","            if video['type'] == 'Trailer' and video['site'] == 'YouTube':\n","                trailer_url = f\"https://www.youtube.com/watch?v={video['key']}\"\n","                break\n","\n","        cast = ', '.join([member['name'] for member in data['credits']['cast'][:5]])\n","        streaming_services = []\n","        providers = data['watch/providers']['results'].get(country_code)\n","        if providers and 'flatrate' in providers:\n","            streaming_services = [provider['provider_name'] for provider in providers['flatrate']]\n","\n","        return {\n","            'title': data['title'],\n","            'release_date': data.get('release_date', 'N/A'),\n","            'vote_average': data['vote_average'],\n","            'runtime': data.get('runtime', 'N/A'),\n","            'trailer_url': trailer_url,\n","            'cast': cast,\n","            'streaming_services': ', '.join(streaming_services) if streaming_services else 'Not available for streaming'\n","        }\n","    else:\n","        print(f\"Error retrieving movie details: {response.status_code} - {response.text}\")\n","        return None\n","\n","# Helper function to get movies from TMDB API\n","def get_tmdb_movies(genre_id, min_runtime, max_runtime, language, year_min=None, year_max=None):\n","    url = f\"{BASE_URL}/discover/movie\"\n","    params = {\n","        'api_key': API_KEY,\n","        'with_genres': genre_id,\n","        'with_original_language': language,\n","        'with_runtime.gte': min_runtime,\n","        'with_runtime.lte': max_runtime,\n","        'sort_by': 'popularity.desc',\n","        'vote_average.gte': 5,\n","        'include_adult': False,\n","    }\n","\n","    if year_min:\n","        params['primary_release_date.gte'] = f\"{year_min}-01-01\"\n","    if year_max:\n","        params['primary_release_date.lte'] = f\"{year_max}-12-31\"\n","\n","    response = requests.get(url, params=params)\n","    if response.status_code == 200:\n","        movies = response.json().get('results', [])\n","        return [get_movie_details(movie['id']) for movie in movies if get_movie_details(movie['id']) is not None]\n","    else:\n","        print(f\"Error: {response.status_code} - {response.text}\")\n","        return []\n","\n","# Define route for the homepage\n","@app.route('/')\n","def home():\n","    return render_template('home.html')\n","\n","# Define route for displaying recommendations\n","@app.route('/recommend', methods=['POST'])\n","def recommend():\n","    user_mood = request.form.get('mood').strip().lower()\n","    time_available = int(request.form.get('time_available').strip())\n","    streaming_services = request.form.getlist('streaming_services')  # Retrieve selected checkboxes\n","\n","    closest_mood = find_closest_mood(user_mood)\n","    genre_id = mood_genre_mapping.get(closest_mood, 18)\n","\n","    min_runtime = max(0, time_available - 20)\n","    max_runtime = time_available\n","    current_year = datetime.now().year\n","\n","    # Assume English as default language\n","    recent_movies = get_tmdb_movies(genre_id, min_runtime, max_runtime, language='en', year_min=current_year - 10, year_max=current_year)\n","    older_movies = get_tmdb_movies(genre_id, min_runtime, max_runtime, language='en', year_max=current_year - 10)\n","\n","    recommendations = [\n","        (random.choice([movie for movie in recent_movies if movie and any(service in movie['streaming_services'] for service in streaming_services)]), \"Recent Movie (within last 10 years)\"),\n","        (random.choice([movie for movie in older_movies if movie and any(service in movie['streaming_services'] for service in streaming_services)]), \"Older Movie (more than 10 years old)\")\n","    ]\n","\n","    return render_template('recommendations.html', mood=closest_mood.capitalize(), recommendations=recommendations)\n","\n","if __name__ == '__main__':\n","    app.run()\n","\n"]},{"cell_type":"markdown","metadata":{"id":"aFcMj_9mdS1S"},"source":["# Writing HTML"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1730457732959,"user":{"displayName":"Jamie Hill","userId":"10831983047187267053"},"user_tz":0},"id":"GwVLjzQGdvYU","outputId":"242e687e-d04a-4d1a-e3a3-1f3821ae4373"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'\\n%%writefile /content/drive/MyDrive/ColabNotebooks/Movie_recommender/templates/home.html\\n\u003c!DOCTYPE html\u003e\\n\u003chtml lang=\"en\"\u003e\\n\u003chead\u003e\\n    \u003cmeta charset=\"UTF-8\"\u003e\\n    \u003ctitle\u003eMovie Recommender\u003c/title\u003e\\n    \u003cstyle\u003e\\n        body { font-family: Arial, sans-serif; background-color: #f8f9fa; color: #333; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; }\\n        .container { background-color: #fff; padding: 20px 40px; border-radius: 10px; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); text-align: center; max-width: 400px; }\\n        h1 { color: #007bff; font-size: 24px; margin-bottom: 20px; }\\n        label { font-weight: bold; margin-top: 10px; display: block; }\\n        input[type=\"text\"], input[type=\"number\"] { width: 100%; padding: 10px; margin-top: 5px; border-radius: 5px; border: 1px solid #ccc; margin-bottom: 15px; }\\n        button { background-color: #007bff; color: white; border: none; padding: 10px 20px; font-size: 16px; cursor: pointer; border-radius: 5px; }\\n        button:hover { background-color: #0056b3; }\\n    \u003c/style\u003e\\n\u003c/head\u003e\\n\u003cbody\u003e\\n    \u003cdiv class=\"container\"\u003e\\n        \u003ch1\u003eFind Your Movie\u003c/h1\u003e\\n        \u003cform action=\"/recommend\" method=\"post\"\u003e\\n            \u003clabel for=\"mood\"\u003eHow do you want to feel?\u003c/label\u003e\\n            \u003cinput type=\"text\" id=\"mood\" name=\"mood\" required\u003e\\n\\n            \u003clabel for=\"time_available\"\u003eHow much time do you have (in minutes)?\u003c/label\u003e\\n            \u003cinput type=\"number\" id=\"time_available\" name=\"time_available\" required\u003e\\n\\n            \u003clabel for=\"language\"\u003eLanguage (e.g., en for English):\u003c/label\u003e\\n            \u003cinput type=\"text\" id=\"language\" name=\"language\" required\u003e\\n\\n            \u003cbutton type=\"submit\"\u003eGet Recommendation\u003c/button\u003e\\n        \u003c/form\u003e\\n    \u003c/div\u003e\\n\u003c/body\u003e\\n\u003c/html\u003e\\n'"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["\"\"\"\n","%%writefile /content/drive/MyDrive/ColabNotebooks/Movie_recommender/templates/home.html\n","\u003c!DOCTYPE html\u003e\n","\u003chtml lang=\"en\"\u003e\n","\u003chead\u003e\n","    \u003cmeta charset=\"UTF-8\"\u003e\n","    \u003ctitle\u003eMovie Recommender\u003c/title\u003e\n","    \u003cstyle\u003e\n","        body { font-family: Arial, sans-serif; background-color: #f8f9fa; color: #333; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; }\n","        .container { background-color: #fff; padding: 20px 40px; border-radius: 10px; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); text-align: center; max-width: 400px; }\n","        h1 { color: #007bff; font-size: 24px; margin-bottom: 20px; }\n","        label { font-weight: bold; margin-top: 10px; display: block; }\n","        input[type=\"text\"], input[type=\"number\"] { width: 100%; padding: 10px; margin-top: 5px; border-radius: 5px; border: 1px solid #ccc; margin-bottom: 15px; }\n","        button { background-color: #007bff; color: white; border: none; padding: 10px 20px; font-size: 16px; cursor: pointer; border-radius: 5px; }\n","        button:hover { background-color: #0056b3; }\n","    \u003c/style\u003e\n","\u003c/head\u003e\n","\u003cbody\u003e\n","    \u003cdiv class=\"container\"\u003e\n","        \u003ch1\u003eFind Your Movie\u003c/h1\u003e\n","        \u003cform action=\"/recommend\" method=\"post\"\u003e\n","            \u003clabel for=\"mood\"\u003eHow do you want to feel?\u003c/label\u003e\n","            \u003cinput type=\"text\" id=\"mood\" name=\"mood\" required\u003e\n","\n","            \u003clabel for=\"time_available\"\u003eHow much time do you have (in minutes)?\u003c/label\u003e\n","            \u003cinput type=\"number\" id=\"time_available\" name=\"time_available\" required\u003e\n","\n","            \u003clabel for=\"language\"\u003eLanguage (e.g., en for English):\u003c/label\u003e\n","            \u003cinput type=\"text\" id=\"language\" name=\"language\" required\u003e\n","\n","            \u003cbutton type=\"submit\"\u003eGet Recommendation\u003c/button\u003e\n","        \u003c/form\u003e\n","    \u003c/div\u003e\n","\u003c/body\u003e\n","\u003c/html\u003e\n","\"\"\"\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1730457732960,"user":{"displayName":"Jamie Hill","userId":"10831983047187267053"},"user_tz":0},"id":"xSCxB_wZeUDP","outputId":"550801cc-eb17-4f46-903d-c09f325d6b7c"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'\\n%%writefile /content/drive/MyDrive/ColabNotebooks/Movie_recommender/templates/recommendations.html\\n\u003c!DOCTYPE html\u003e\\n\u003chtml lang=\"en\"\u003e\\n\u003chead\u003e\\n    \u003cmeta charset=\"UTF-8\"\u003e\\n    \u003ctitle\u003eMovie Recommendation Result\u003c/title\u003e\\n    \u003cstyle\u003e\\n        body { font-family: Arial, sans-serif; background-color: #f8f9fa; color: #333; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; }\\n        .container { background-color: #fff; padding: 20px 40px; border-radius: 10px; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); max-width: 500px; }\\n        h1 { color: #007bff; font-size: 24px; text-align: center; margin-bottom: 20px; }\\n        .movie { margin-bottom: 20px; padding: 15px; border-radius: 5px; background-color: #f1f1f1; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); }\\n        h2 { color: #333; font-size: 20px; margin: 10px 0; }\\n        p { margin: 5px 0; }\\n    \u003c/style\u003e\\n\u003c/head\u003e\\n\u003cbody\u003e\\n    \u003cdiv class=\"container\"\u003e\\n        \u003ch1\u003eRecommended Movies for Feeling {{ mood }}\u003c/h1\u003e\\n\\n        {% for movie, label in recommendations %}\\n        \u003cdiv class=\"movie\"\u003e\\n            \u003ch2\u003e{{ label }}:\u003c/h2\u003e\\n            \u003cp\u003e\u003cstrong\u003eTitle:\u003c/strong\u003e {{ movie[\\'title\\'] }} ({{ movie[\\'release_date\\'][:4] }})\u003c/p\u003e\\n            \u003cp\u003e\u003cstrong\u003eRating:\u003c/strong\u003e {{ movie[\\'vote_average\\'] }}\u003c/p\u003e\\n            \u003cp\u003e\u003cstrong\u003eRuntime:\u003c/strong\u003e {{ movie[\\'runtime\\'] }} mins\u003c/p\u003e\\n            \u003cp\u003e\u003cstrong\u003eCast:\u003c/strong\u003e {{ movie[\\'cast\\'] }}\u003c/p\u003e\\n            \u003cp\u003e\u003cstrong\u003eStreaming Services:\u003c/strong\u003e {{ movie[\\'streaming_services\\'] }}\u003c/p\u003e\\n            \u003cp\u003e\u003cstrong\u003eTrailer:\u003c/strong\u003e \u003ca href=\"{{ movie[\\'trailer_url\\'] }}\" target=\"_blank\"\u003eWatch Trailer\u003c/a\u003e\u003c/p\u003e\\n        \u003c/div\u003e\\n        {% else %}\\n        \u003cp\u003eNo recommendations available.\u003c/p\u003e\\n        {% endfor %}\\n    \u003c/div\u003e\\n\u003c/body\u003e\\n\u003c/html\u003e\\n'"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["\"\"\"\n","%%writefile /content/drive/MyDrive/ColabNotebooks/Movie_recommender/templates/recommendations.html\n","\u003c!DOCTYPE html\u003e\n","\u003chtml lang=\"en\"\u003e\n","\u003chead\u003e\n","    \u003cmeta charset=\"UTF-8\"\u003e\n","    \u003ctitle\u003eMovie Recommendation Result\u003c/title\u003e\n","    \u003cstyle\u003e\n","        body { font-family: Arial, sans-serif; background-color: #f8f9fa; color: #333; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; }\n","        .container { background-color: #fff; padding: 20px 40px; border-radius: 10px; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); max-width: 500px; }\n","        h1 { color: #007bff; font-size: 24px; text-align: center; margin-bottom: 20px; }\n","        .movie { margin-bottom: 20px; padding: 15px; border-radius: 5px; background-color: #f1f1f1; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); }\n","        h2 { color: #333; font-size: 20px; margin: 10px 0; }\n","        p { margin: 5px 0; }\n","    \u003c/style\u003e\n","\u003c/head\u003e\n","\u003cbody\u003e\n","    \u003cdiv class=\"container\"\u003e\n","        \u003ch1\u003eRecommended Movies for Feeling {{ mood }}\u003c/h1\u003e\n","\n","        {% for movie, label in recommendations %}\n","        \u003cdiv class=\"movie\"\u003e\n","            \u003ch2\u003e{{ label }}:\u003c/h2\u003e\n","            \u003cp\u003e\u003cstrong\u003eTitle:\u003c/strong\u003e {{ movie['title'] }} ({{ movie['release_date'][:4] }})\u003c/p\u003e\n","            \u003cp\u003e\u003cstrong\u003eRating:\u003c/strong\u003e {{ movie['vote_average'] }}\u003c/p\u003e\n","            \u003cp\u003e\u003cstrong\u003eRuntime:\u003c/strong\u003e {{ movie['runtime'] }} mins\u003c/p\u003e\n","            \u003cp\u003e\u003cstrong\u003eCast:\u003c/strong\u003e {{ movie['cast'] }}\u003c/p\u003e\n","            \u003cp\u003e\u003cstrong\u003eStreaming Services:\u003c/strong\u003e {{ movie['streaming_services'] }}\u003c/p\u003e\n","            \u003cp\u003e\u003cstrong\u003eTrailer:\u003c/strong\u003e \u003ca href=\"{{ movie['trailer_url'] }}\" target=\"_blank\"\u003eWatch Trailer\u003c/a\u003e\u003c/p\u003e\n","        \u003c/div\u003e\n","        {% else %}\n","        \u003cp\u003eNo recommendations available.\u003c/p\u003e\n","        {% endfor %}\n","    \u003c/div\u003e\n","\u003c/body\u003e\n","\u003c/html\u003e\n","\"\"\"\n"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1730457732960,"user":{"displayName":"Jamie Hill","userId":"10831983047187267053"},"user_tz":0},"id":"BYZeM2hO1RrC","outputId":"be1927af-fb4c-44ee-a9b9-4be87fddbc7b"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'\\n%%writefile /content/drive/MyDrive/ColabNotebooks/Movie_recommender/requirements.txt\\nFlask\\nflask-ngrok\\nrequests\\nspacy\\npyngrok\\n'"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["\"\"\"\n","%%writefile /content/drive/MyDrive/ColabNotebooks/Movie_recommender/requirements.txt\n","Flask\n","flask-ngrok\n","requests\n","spacy\n","pyngrok\n","\"\"\""]}],"metadata":{"colab":{"authorship_tag":"ABX9TyMK0BYb14YKI7H0dM8dBMLv","mount_file_id":"1gYEgL_mwPFxYsdTdLh-hAfg82sklLgXk","name":"","toc_visible":true,"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}